CREATE DATABASE IF NOT EXISTS lab;

USE lab;

CREATE TABLE user(
	userId VARCHAR(10) PRIMARY KEY,
	userName VARCHAR (20) NOT NULL,
	userType VARCHAR (10) NOT NULL,
	password VARCHAR (20) NOT NULL,
    email VARCHAR(50)
);


CREATE TABLE job_role(
	jobId VARCHAR (10) PRIMARY KEY,
	jobTitle VARCHAR (20) NOT NULL,
	workingHoursPerMonth INT NOT NULL,
	basicSalary DECIMAL (8,2) NOT NULL,
	otPaymentsPerHour DECIMAL(6,2) NOT NULL
);


CREATE TABLE employee(
	empId VARCHAR (10) PRIMARY KEY,
	jobId VARCHAR (10) NOT NULL,
	userId VARCHAR (10) NOT NULL,
	name VARCHAR (20) NOT NULL,
	nic VARCHAR (15) NOT NULL,
	address VARCHAR (20),
	email VARCHAR (30),
	telNo VARCHAR (13),
	FOREIGN KEY (jobId) REFERENCES job_role (jobId) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (userId) REFERENCES user (userId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE attendance(
	empId VARCHAR (10) NOT NULL,
	date DATE NOT NULL,
	inTime TIME NOT NULL,
	outTime TIME,
	status VARCHAR (10)NOT NULL,
	FOREIGN KEY (empId) REFERENCES employee (empId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE salary(
	salId VARCHAR (10) PRIMARY KEY,
	empId VARCHAR (10) NOT NULL,
	amount DECIMAL(8,2) NOT NULL,
	paidDate DATE NOT NULL,
	FOREIGN KEY (empId) REFERENCES employee (empId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE collecting_center(
	ccId VARCHAR (10) PRIMARY KEY,
	centerName VARCHAR (20) NOT NULL,
	address VARCHAR (20),
	tel VARCHAR (13),
	email VARCHAR (30)
);

CREATE TABLE patient(
	ptId VARCHAR (10) PRIMARY KEY,
	userId VARCHAR (10) NOT NULL,
	ccId VARCHAR (10) NOT NULL,
	name VARCHAR (20) NOT NULL,
	gender VARCHAR (10) NOT NULL,
	DOB VARCHAR (10) NOT NULL,
	telNo VARCHAR (13),
	email VARCHAR (30) DEFAULT "NO",
	FOREIGN KEY (userId) REFERENCES user (userId) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ccId) REFERENCES collecting_center (ccId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE section(
	secId VARCHAR (10) PRIMARY KEY,
	secName VARCHAR (30) NOT NULL,
	consultantName VARCHAR (30) NOT NULL
);


CREATE TABLE machine(
	machineId VARCHAR (10) PRIMARY KEY,
	secId VARCHAR (10) NOT NULL,
	machineName VARCHAR (30) NOT NULL,
	status VARCHAR (30) DEFAULT "NORMAL",
	FOREIGN KEY (secId) REFERENCES section (secId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE test(
	testId VARCHAR (10) PRIMARY KEY,
	secId VARCHAR (10) NOT NULL,
	test VARCHAR (30) NOT NULL,
	estimatedTime VARCHAR (20) NOT NULL,
	testPrice DECIMAL (6,2) NOT NULL,
    sampleType VARCHAR(30) NOT NULL,
    machineId VARCHAR (10),
	FOREIGN KEY (secId) REFERENCES section (secId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (machineId) REFERENCES machine (machineId) ON DELETE CASCADE ON UPDATE CASCADE
	);

CREATE TABLE refference_range(
    subTestId VARCHAR(10) NOT NULL,
    ranges VARCHAR(50),
    unit VARCHR(30),
    FOREIGN KEY (testId) REFERENCES test (testId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE prescription(
	presId VARCHAR (10) PRIMARY KEY,
	ptId VARCHAR (10) NOT NULL,
	refferedBy VARCHAR(50) DEFAULT "Self Investigation",
	totalAmount DECIMAL(8,2) NOT NULL,
	duePayment DECIMAL(8,2),
	FOREIGN KEY (ptId) REFERENCES patient (ptId) ON DELETE CASCADE ON UPDATE CASCADE
	);

CREATE TABLE patient_test_details(
	date DATE NOT NULL,
	presId VARCHAR (10) NOT NULL,
	testId VARCHAR (10) NOT NULL,
	status VARCHAR (50) DEFAULT "Not Ready",
    comment VARCHAR (50) DEFAULT "-",
	FOREIGN KEY (presId) REFERENCES prescription (presId) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (testId) REFERENCES test (testId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE stock_item(
	itemCode VARCHAR (10) PRIMARY KEY,
	userId VARCHAR (10) NOT NULL,
	description VARCHAR (40),
	qtyOnHand INT NOT NULL,
    category VARCHAR(40),
    warningLevel int,
	FOREIGN KEY (userId) REFERENCES user (userId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE stock_usage(
	testId VARCHAR(10),
	itemCode VARCHAR (10),
	qtyPerTest INT,
	FOREIGN KEY (testId) REFERENCES test (testId) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (itemCode) REFERENCES stock_item (itemCode) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE supplier(
	supId VARCHAR (10) PRIMARY KEY,
	name VARCHAR (30) NOT NULL,
	telNo VARCHAR (13),
	email VARCHAR (30) NOT NULL,
    category VARCHAR(40)
);


CREATE TABLE orders(
	orderId VARCHAR (10) PRIMARY KEY,
	supId VARCHAR (10) NOT NULL,
	date DATE,
	status VARCHAR (20),
	FOREIGN KEY (supId) REFERENCES supplier (supId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE item_order_details(
	itemCode VARCHAR (10) NOT NULL,
	orderId VARCHAR (10) NOT NULL,
	qty INT,
	FOREIGN KEY (itemCode) REFERENCES stock_item (itemCode) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (orderId) REFERENCES orders (orderId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE sub_test(
    testId VARCHAR(10),
    subTestId VARCHAR(10) PRIMARY KEY,
    subTestName VARCHAR(50),
    FOREIGN KEY (testId) REFERENCES test (testId) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE result(
    presId VARCHAR (10),
    subTestId VARCHAR (10),
    result VARCHAR (50),
    FOREIGN KEY (presId) REFERENCES prescription (presId) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (subTestId) REFERENCES sub_test (subTestId) ON DELETE CASCADE ON UPDATE CASCADE
);


